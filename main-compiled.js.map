{"version":3,"sources":["main.js"],"names":[],"mappings":";;AAOA;;AACA;;AACA;;;;AAKA;;;;AAJA,IAAM,UAAU,MAAhB,C,CAVA;;;;;AAKA;AACA;;AAKA,IAAM,OAAO,wBAAS,QAAQ,IAAR,CAAa,KAAb,CAAmB,CAAnB,CAAT,CAAb;;AAEA;;;AAGA,IAAM,UAAU,KAAK,GAArB;AACA,IAAI,OAAO,sBAAa,OAAb,EAAsB,OAAtB,CAAX;AACA,QAAQ,GAAR,CAAY,wBAAZ,EAAsC,OAAtC,EAA8C,kBAA9C,qBAAyE,oBAAzE;;AAEA;AACA;AACA,IAAM,MAAM,eAAO,KAAP,CAAa,IAAb,CAAZ;;AAEA;;AAEA;AACA,QAAQ,GAAR,CAAY,4BAAZ","file":"main-compiled.js","sourcesContent":["/**\n * Entry point for application\n *\n * */\n\n// Read conf based on ENV\n//   select parser\nimport { readFileSync } from 'fs';\nimport { parser } from './parser';\nimport  minimist from 'minimist';\nconst options = 'utf8';\nconst args = minimist(process.argv.slice(2));\n\n//   select projection\nimport { graph } from './projection';\n\nconst srcFile = args.src;\nlet code = readFileSync(srcFile, options);\nconsole.log(\"Anaxamander to analyze\", srcFile,\"with projection:\", graph, \"and parser: esdown\"  );\n\n// parse\n// const AST = parser.transformFileSync(srcFile, options);\nconst AST = parser.parse(code);\n\n// project\n\n// finalize\nconsole.log(\"Anaxamander completed ... \");\n"]}